@using DoggyLife.Components
@using DoggyLife.Components.Settings
@using DoggyLife.Data.Database
@using DoggyLife.Models.Storage
@using DoggyLife.Models.Storage.Settings
@using Microsoft.EntityFrameworkCore
@using SqliteWasmHelper
@inject ISqliteWasmDbContextFactory<AppDbContext> Factory

<Container>
    <h2 style="color: white;">Game Settings</h2>

    <UserManager User="@_user" OnUserUpdated="HandleUserUpdated" />

    <MusicSettingsManager />
</Container>

@code {
    private User? _user;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            await LoadUserDetails();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during initialization: {ex.Message}");
        }
    }

    private async Task LoadUserDetails()
    {
        try
        {
            using var ctx = await Factory.CreateDbContextAsync();

            var users = await ctx.Users.ToListAsync();
            _user = users.FirstOrDefault();

            if (_user is not null)
            {
                Console.WriteLine($"Loaded user: {_user.Name}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading user details: {ex.Message}");
            // Continue with null user
        }
    }
    private void HandleUserUpdated(User user)
    {
        _user = user;
    }
}
