@inject IJSRuntime JSRuntime
@page "/"

<div style="width: 100%; height: 100%; display: flex; flex-column; align-items: center; justify-content: center;">
    @if (_musicTrack == MusicTrack.None)
    {
        <img alt="play button" src="images/play-button.png" class="play-button cursor-pointer" @onclick="@PlayMatchaGreen" />
    }
    else if (_musicTrack == MusicTrack.MatchaGreenTea)
    {
        <p>x: @_mouseX y: @_mouseY</p>
        <BECanvas Width="_width" Height="_height" @ref="_canvasReference" />

        <img @ref="@_dog.ImageElements["backwalk-1"]" src="images/dog/backwalk-1.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["backwalk-2"]" src="images/dog/backwalk-2.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["backwalk-3"]" src="images/dog/backwalk-3.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["backwalk-4"]" src="images/dog/backwalk-4.png" style="width: 25px; height: 25px; display: none;">

        <img @ref="@_dog.ImageElements["frontsit-1"]" src="images/dog/frontsit-1.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["frontsit-2"]" src="images/dog/frontsit-2.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["frontsit-3"]" src="images/dog/frontsit-3.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["frontsit-4"]" src="images/dog/frontsit-4.png" style="width: 25px; height: 25px; display: none;">

        <img @ref="@_dog.ImageElements["frontwalk-1"]" src="images/dog/frontwalk-1.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["frontwalk-2"]" src="images/dog/frontwalk-2.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["frontwalk-3"]" src="images/dog/frontwalk-3.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["frontwalk-4"]" src="images/dog/frontwalk-4.png" style="width: 25px; height: 25px; display: none;">

        <img @ref="@_dog.ImageElements["rightsit-1"]" src="images/dog/rightsit-1.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["rightsit-2"]" src="images/dog/rightsit-2.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["rightsit-3"]" src="images/dog/rightsit-3.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["rightsit-4"]" src="images/dog/rightsit-4.png" style="width: 25px; height: 25px; display: none;">

        <img @ref="@_dog.ImageElements["rightwalk-1"]" src="images/dog/rightwalk-1.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["rightwalk-2"]" src="images/dog/rightwalk-2.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["rightwalk-3"]" src="images/dog/rightwalk-3.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["rightwalk-4"]" src="images/dog/rightwalk-4.png" style="width: 25px; height: 25px; display: none;">

        <img @ref="@_dog.ImageElements["leftsit-1"]" src="images/dog/leftsit-1.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["leftsit-2"]" src="images/dog/leftsit-2.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["leftsit-3"]" src="images/dog/leftsit-3.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["leftsit-4"]" src="images/dog/leftsit-4.png" style="width: 25px; height: 25px; display: none;">

        <img @ref="@_dog.ImageElements["leftwalk-1"]" src="images/dog/leftwalk-1.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["leftwalk-2"]" src="images/dog/leftwalk-2.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["leftwalk-3"]" src="images/dog/leftwalk-3.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_dog.ImageElements["leftwalk-4"]" src="images/dog/leftwalk-4.png" style="width: 25px; height: 25px; display: none;">

        <img @ref="@_floorElement" src="images/floor.png" style="width: 25px; height: 25px; display: none;">
        <img @ref="@_roomElement" src="images/room-background.png" style="width: 25px; height: 25px; display: none;">
    }
</div>

@code
{
    private MusicTrack _musicTrack = MusicTrack.None;
    private Models.Environment environment = Models.Environment.Garden;

    private Canvas2DContext? _context;
    protected BECanvasComponent? _canvasReference;
    private int _ticks = 0;

    private int _width = 350;
    private int _height = 350;

    private float _mouseX;
    private float _mouseY;

    private Dog _dog = new GardenDog(400, 400);

    private ElementReference _floorElement;
    private ElementReference _roomElement;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_canvasReference is null)
        {
            return;
        }

        this._context = await this._canvasReference.CreateCanvas2DAsync();

        await _context.DrawImageAsync(_roomElement, 0, 0, _width, _height);

        _dog.Move(_width, _height, _ticks);
        await _dog.Draw(_context);

        _ticks = _ticks == int.MaxValue ? 0 : _ticks + 1;
        await Task.Delay(200);
        StateHasChanged();
    }

    private async Task DrawWoodenFloor()
    {
        if (_context is null)
        {
            return;
        }

        var floorX = 0;
        var floorY = 0;
        var floorWidth = _width / 10;
        var floorHeight = _height / 10;

        for (var i = 0; i < 10; i++)
        {
            for (var j = 0; j < 10; j++)
            {
                await _context.DrawImageAsync(_floorElement, floorX, floorY, floorWidth, floorHeight);
                floorX += floorWidth;
            }

            floorX = 0;
            floorY += floorHeight;
        }
    }

    private async Task PlayMatchaGreen()
    {
        if (_musicTrack != MusicTrack.None)
        {
            return;
        }

        await JSRuntime.InvokeVoidAsync("changeTrack", "Matcha Green Tea");
        _musicTrack = MusicTrack.MatchaGreenTea;
    }
}
