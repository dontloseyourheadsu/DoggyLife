@page "/"
@using DoggyLife.Components
@using DoggyLife.Data.Database
@using DoggyLife.Models.Storage
@using DoggyLife.Models
@using DoggyLife.Models.Modes
@using DoggyLife.Components.Room
@using DoggyLife.Pages.Screens
@using DoggyLife.Services
@using Microsoft.EntityFrameworkCore
@using System.Numerics
@using SqliteWasmHelper
@inject MusicService _musicService
@inject RoomService _roomService

<div class="screens-container" style="overflow-y: scroll;">
    @if (_environment == GameEnvironment.None)
    {
        <PixelButton OnClick="PlayGame">
            Play
        </PixelButton>
    }
    else if (_environment == GameEnvironment.Home)
    {
        <div style="display: flex; gap: 10px; flex-wrap: wrap; justify-content: center; align-items: center;">
            <GameModeSelector OnRoomModeChanged="HandleRoomModeChanged" />

            <PixelButton OnClick="() => _environment = GameEnvironment.Settings">
                Settings
            </PixelButton>
            <PixelButton OnClick="() => _environment = GameEnvironment.RoomAppearance">
                Room Appearance
            </PixelButton>
        </div>

        <div style="display:flex; gap: 2em; flex-wrap: wrap;">
            <RoomCanvas />
            <HologramItemSelector CurrentRoomMode="_currentRoomMode" />
        </div>
    }
    else if (_environment == GameEnvironment.Settings)
    {
        <GameSettings />

        <PixelButton OnClick="() => _environment = GameEnvironment.Home">
            Back to Home
        </PixelButton>
    }
    else if (_environment == GameEnvironment.RoomAppearance)
    {
        <RoomAppearance />

        <PixelButton OnClick="() => _environment = GameEnvironment.Home">
            Back to Home
        </PixelButton>
    }
</div>

@code {
    private GameEnvironment _environment = GameEnvironment.None;
    private RoomMode _currentRoomMode = RoomMode.Interaction;

    private async Task PlayGame()
    {
        if (_environment != GameEnvironment.None) return;

        await _roomService.InitializeAsync();
        await _musicService.InitializeAsync();

        await _musicService.PlayTrack(MusicTrack.MatchaGreenTea);

        _environment = GameEnvironment.Home;

        StateHasChanged();
    }

    private void HandleRoomModeChanged(RoomMode newMode)
    {
        _currentRoomMode = newMode;
        StateHasChanged();
    }
}
