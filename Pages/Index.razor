@page "/"

<div style="width: 100%; height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center;">
    @if (_musicTrack == MusicTrack.None)
    {
        <img alt="play button" src="images/play-button.png" class="play-button cursor-pointer" @onclick="@(async () => await PlayGame())" />
    }
</div>

@code
{
    private MusicTrack _musicTrack = MusicTrack.None;
    private Scene environment = Scene.Garden;

    private Canvas2DContext? _context;
    private ElementReference _canvasContainer;
    protected BECanvasComponent? _canvasReference;
    private int _ticks = 0;
    private bool _isPlaying = false;

    private int _width = 350;
    private int _height = 350;

    private float _mouseX;
    private float _mouseY;

    private Dog _dog = new GardenDog(400, 400);
    private Ball _ball = new Ball();

    private ElementReference _roomElement;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isPlaying = true;
        }

        return base.OnAfterRenderAsync(firstRender);
    }

    private async Task PlayGame()
    {
        await PlayMatchaGreen();

        _isPlaying = true;
        await PlayGameLoop();
    }

    private async Task PlayMatchaGreen()
    {
        if (_musicTrack != MusicTrack.None)
        {
            return;
        }

        await JSRuntime.InvokeVoidAsync("changeTrack", "Matcha Green Tea");
        _musicTrack = MusicTrack.MatchaGreenTea;

        StateHasChanged();
    }
}
