@page "/"
@using DoggyLife.Physics
@using DoggyLife.Rendering.Isometric
@using SkiaSharp
@using SkiaSharp.Views.Blazor
@using System.Numerics
@inject IJSRuntime JSRuntime

<div style="width: 100%; height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center;">
    @if (!_isPlaying)
    {
        <img alt="play button" src="images/play-button.png" class="play-button cursor-pointer" @onclick="@(async () => await PlayGame())" />
    }
    else
    {
        <SKCanvasView Width="@_width" Height="@_height"
        EnableRenderLoop="true"
        IgnorePixelScaling="true"
        OnPaintSurface="OnGamePaint"/>
    }
</div>

@code
{
    private MusicTrack _musicTrack = MusicTrack.None;
    private Scene _environment = Scene.Garden;
    private VerletSystem _verletSystem;

    private bool _isPlaying = false;

    private int _width = 300;
    private int _height = 300;

    private float _deltaTime = 0.016f; // 60 FPS

    private async Task PlayGame()
    {
        if (_isPlaying)
        {
            return;
        }

        SetupVerletSystem();
        await PlayMatchaGreen();

        _isPlaying = true;
    }

    private void SetupVerletSystem()
    {
        _verletSystem = new VerletSystem(_width, _height);
    }

    private async Task PlayMatchaGreen()
    {
        if (_musicTrack != MusicTrack.None)
        {
            return;
        }

        await JSRuntime.InvokeVoidAsync("changeTrack", "Matcha Green Tea");
        _musicTrack = MusicTrack.MatchaGreenTea;

        StateHasChanged();
    }

    private void OnGamePaint(SKPaintSurfaceEventArgs e)
    {
        var canvas = e.Surface.Canvas;
        canvas.Clear(SKColors.Black);

        IsometricRoomBuilder.DrawIsometricRoom(canvas, _width, _height);

        _verletSystem.Update(_deltaTime);
        _verletSystem.Draw(canvas);

        // Draw a line around the canvas (square)
        canvas.DrawRect(new SKRect(0, 0, _width, _height), new SKPaint
            {
                Color = SKColors.White,
                Style = SKPaintStyle.Stroke,
                StrokeWidth = 2
            });
    }
}
