@page "/"
@using SkiaSharp
@using SkiaSharp.Views.Blazor
@inject IJSRuntime JSRuntime

<div style="width: 100%; height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center;">
    @if (!_isPlaying)
    {
        <img alt="play button" src="images/play-button.png" class="play-button cursor-pointer" @onclick="@(async () => await PlayGame())" />
    }
    else
    {
        <SKCanvasView Width="@_width"
                      Height="@_height"
                      OnPaintSurface="OnGamePaint"
                      Style="border: 1px solid black; background-color: white;"/>
    }
</div>

@code
{
    private MusicTrack _musicTrack = MusicTrack.None;
    private Scene environment = Scene.Garden;

    private bool _isPlaying = false;

    private int _width = 350;
    private int _height = 350;

    private async Task PlayGame()
    {
        await PlayMatchaGreen();

        _isPlaying = true;
    }

    private async Task PlayMatchaGreen()
    {
        if (_musicTrack != MusicTrack.None)
        {
            return;
        }

        await JSRuntime.InvokeVoidAsync("changeTrack", "Matcha Green Tea");
        _musicTrack = MusicTrack.MatchaGreenTea;

        StateHasChanged();
    }

    private void OnGamePaint(SKPaintSurfaceEventArgs e)
    {
        var canvas = e.Surface.Canvas;
        canvas.Clear(SKColors.White);

        var skFont = new SKFont(SKTypeface.FromFamilyName("Arial"), 24);

        var paint = new SKPaint
        {
            Color = SKColors.Black,
            IsAntialias = true,
        };

        canvas.DrawText("Hello, SkiaSharp!", 100, 100, SKTextAlign.Center, skFont, paint);
    }
}
